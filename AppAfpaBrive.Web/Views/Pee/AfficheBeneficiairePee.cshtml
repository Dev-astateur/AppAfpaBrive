@model IEnumerable<AppAfpaBrive.BOL.Pee>
@using AppAfpaBrive.BOL;
@using Microsoft.EntityFrameworkCore;

@{
    List<PeriodePee> LitsPeriode = new List<PeriodePee>();

    LitsPeriode = ViewData["PeriodePee"] as List<PeriodePee>;
    //var ListPeeSansDoublon = ViewBag.ListSansDoublons;


}

<h4>Pee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
       
    </div>
</div>

<div>
    <table id="myTable" class="table table-bordered table-hover ">
        <thead class="thead-light">
            <tr>

                <th>Nom Beneficiaire</th>
                <th>Prénom Beneficiaire</th>
                <th>Entreprise_1</th>

                @foreach (var itemBeneficiaire in Model)
                {
                    if (itemBeneficiaire.MatriculeBeneficiaireNavigation.Pees.Count() > 1)
                    {
                        int j = 1;
                        for (int x = 0; x < itemBeneficiaire.MatriculeBeneficiaireNavigation.Pees.Count(); x++)
                        {
                            j += 1;
                            <th>Entreprise_@j</th>
                        }
                    }
                }

                <th>Pee_1</th>
                @{
                    int i = 0;
                    foreach (var item in Model)
                    {

                        if (item.MatriculeBeneficiaireNavigation.Pees.Count() > 1)
                        {
                            for (int b = 0; b < item.MatriculeBeneficiaireNavigation.Pees.Count(); b++)
                            {
                                i += 1;
                                <th>Pee_@i</th>
                            }

                        }


                    }
                }

            </tr>
        </thead>
        

            @foreach (var item in Model)
            {
                
    <tr>

        <td>@item.MatriculeBeneficiaireNavigation.NomBeneficiaire</td>
        <td>@item.MatriculeBeneficiaireNavigation.PrenomBeneficiaire</td>
        <td>@item.IdEntrepriseNavigation.RaisonSociale</td>
        @{
            int r = 0;

            if (item.MatriculeBeneficiaireNavigation.Pees.Count() > 1)
            {
                r = item.MatriculeBeneficiaireNavigation.Pees.Count();




                foreach (var elem in item.MatriculeBeneficiaireNavigation.Pees)
                {
                    if (elem.IdEntrepriseNavigation.IdEntreprise != item.IdEntreprise)
                    {
                        <td>@elem.IdEntrepriseNavigation.RaisonSociale</td>
                    }



                }

            }
            else
            {
                
                    
                  <td>@item.IdEntrepriseNavigation.RaisonSociale</td>
                   
                
                for (int l = 0; l < r; l++)
                {
                    <td></td>


                }
            }
        }
        @foreach (var element in item.MatriculeBeneficiaireNavigation.Pees)
        {

            if (element.MatriculeBeneficiaire == item.MatriculeBeneficiaire)
            {


                <td>
                    @Html.ActionLink($"Convention_{element.PeriodePees.FirstOrDefault(pr => pr.IdPee == element.IdPee).DateDebutPeriodePee.ToString("MMddyyy")}",
                            "ChargementDocPee",
                            new { id = element.IdPee },
                            new { @class = "btn btn-primary border" }
                           )
                </td>
            }


        }
        @{

        }



    </tr>

            }


    </table>

</div>

