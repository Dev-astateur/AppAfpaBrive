@*@model IEnumerable<AppAfpaBrive.Web.ModelView.BeneficiaireModelView>*@
@model ReflectionIT.Mvc.Paging.PagingList<AppAfpaBrive.Web.ModelView.BeneficiaireModelView>
@{
    ViewData["Title"] = "Liste Beneficiaire";
}
@*@await Html.PartialAsync("_BeneficiairePartial", Model.BeneficiaireOffreFormations)*@
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

<nav aria-label="Beneficiaire navigation">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-reponsive-md" style="width:100%">
        <thead>

            <tr class="table-primary">

                <th scope="col">

                    @Html.SortableHeaderFor(model => model.NomBeneficiaire)

                </th>

                <th scope="col">

                    @Html.DisplayNameFor(model => model.PrenomBeneficiaire)

                </th>

                <th scope="col">

                    @Html.DisplayNameFor(model => model.MailBeneficiaire)

                </th>

                <th scope="col">

                    @Html.DisplayNameFor(model => model.MailingAutorise)

                </th>

            </tr>

        </thead>

        <tbody>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>


                    <td>
                        @Html.DisplayFor(modelItem => item.NomBeneficiaire)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrenomBeneficiaire)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MailBeneficiaire)
                    </td>
                    <td>
                        @Html.CheckBox("checked", true, item.MailingAutorise)
                    </td>



                </tr>
            }
        </tbody>
    </table>
}
