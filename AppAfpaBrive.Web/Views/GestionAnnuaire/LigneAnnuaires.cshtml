@model ReflectionIT.Mvc.Paging.PagingList<AppAfpaBrive.BOL.AnnuaireSocial.LigneAnnuaire>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

<nav aria-label="structure navigation">
    @await this.Component.InvokeAsync("Pager", new { paginglist = this.Model })
</nav>

<h1>Index</h1>

<div class="row pt-4">
    <div class="col-6">
        <h2 class="text-primary">Liste des entrées d'annuaire</h2>
    </div>
    <div class="col-6 text-right">

        <h2 class="text-primary">Liste des entrées d'annuaire</h2>


        <a asp-controller="GestionAnnuaire" asp-action="CreateLigneAnnuaires" class="btn btn-primary">
            <i class="fas fa-plus-square"></i> &nbsp; Ajouter une nouvelle entrée dans l'annuaire
        </a>
        <a asp-controller="GestionAnnuaire" asp-action="Categories" class="btn btn-primary">
            <i class="fas fa-plus-square"></i> &nbsp; Gérer les catégories
        </a>
        <a asp-controller="GestionAnnuaire" asp-action="Contacts" class="btn btn-primary">
            <i class="fas fa-plus-square"></i> &nbsp; Gérer les contacts
        </a>
        <a asp-controller="GestionAnnuaire" asp-action="Structures" class="btn btn-primary">
            <i class="fas fa-plus-square"></i> &nbsp; Gérer les structures
        </a>

    </div>
    <form method="get" class="form-inline">
        <input name="filter" class="form-control" placeholder="filtre" value="@Model.RouteValue["filter"]" />

    </form>
</div>

<br />
<br />


@if (Model.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PublicConcerne)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ServiceAbrege)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Service)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Conditions)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Structure)
                </th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublicConcerne)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ServiceAbrege)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Service)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Conditions)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Structure.NomStructure)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.IdLigneAnnuaire">Modifier</a> |
                        <a asp-action="Delete" asp-route-id="@item.IdLigneAnnuaire">Supprimer</a>
                    </td>
                </tr>

            }
        </tbody>
    </table>

}
else
{
    <p> L'annuaire est actuellement vide</p>
}

