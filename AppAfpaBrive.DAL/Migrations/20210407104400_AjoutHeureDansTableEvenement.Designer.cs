// <auto-generated />
using System;
using AppAfpaBrive.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppAfpaBrive.DAL.Migrations
{
    [DbContext(typeof(AFPANADbContext))]
    [Migration("20210407104400_AjoutHeureDansTableEvenement")]
    partial class AjoutHeureDansTableEvenement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "French_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppAfpaBrive.BOL.AppelationRome", b =>
                {
                    b.Property<int>("CodeAppelationRome")
                        .HasColumnType("int");

                    b.Property<string>("CodeRome")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("LibelleAppelationRome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("CodeAppelationRome");

                    b.HasIndex("CodeRome");

                    b.ToTable("AppelationRome");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Beneficiaire", b =>
                {
                    b.Property<string>("MatriculeBeneficiaire")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<string>("CodePostal")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateNaissanceBeneficiaire")
                        .HasColumnType("date");

                    b.Property<string>("IdPays2")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Ligne1Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne2Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne3Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MailBeneficiaire")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)");

                    b.Property<bool?>("MailingAutorise")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("NomBeneficiaire")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PathPhoto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PrenomBeneficiaire")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelBeneficiaire")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("UserID");

                    b.Property<string>("Ville")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MatriculeBeneficiaire");

                    b.HasIndex(new[] { "CodeTitreCivilite" }, "IX_Beneficiaire_CodeTitreCivilite");

                    b.HasIndex(new[] { "IdPays2" }, "IX_Beneficiaire_Idpays2");

                    b.ToTable("Beneficiaire");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.BeneficiaireOffreFormation", b =>
                {
                    b.Property<string>("MatriculeBeneficiaire")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<string>("Idetablissement")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("IDEtablissement")
                        .IsFixedLength(true);

                    b.Property<string>("Certifie")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('ANT')")
                        .IsFixedLength(true);

                    b.Property<bool?>("Consultable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("DateEntreeBeneficiaire")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateSortieBeneficiaire")
                        .HasColumnType("date");

                    b.Property<bool?>("Delegue")
                        .HasColumnType("bit");

                    b.Property<bool?>("Suppleant")
                        .HasColumnType("bit");

                    b.HasKey("MatriculeBeneficiaire", "IdOffreFormation", "Idetablissement");

                    b.HasIndex("Certifie");

                    b.HasIndex("IdOffreFormation", "Idetablissement");

                    b.ToTable("Beneficiaire_OffreFormation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CampagneMail", b =>
                {
                    b.Property<int>("IdCampagneMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdEtablissement")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.HasKey("IdCampagneMail");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("CampagneMail");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CategorieEvenement", b =>
                {
                    b.Property<string>("IdCatEvent")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("LibelleEvent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCatEvent");

                    b.ToTable("CategorieEvenement");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ChampProfessionnnel", b =>
                {
                    b.Property<string>("IdChampProfessionnel")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("LibelleChampProfessionnel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdChampProfessionnel");

                    b.ToTable("ChampProfessionnnel");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CodeResultatCertification", b =>
                {
                    b.Property<string>("CodeResultatCertification1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CodeResultatCertification")
                        .IsFixedLength(true);

                    b.Property<string>("LibelleResultatCertification")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength(true);

                    b.HasKey("CodeResultatCertification1")
                        .HasName("PK_ResultatCertification");

                    b.ToTable("CodeResultatCertification");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CollaborateurAfpa", b =>
                {
                    b.Property<string>("MatriculeCollaborateurAfpa")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.Property<int>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("MailCollaborateurAfpa")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)");

                    b.Property<string>("NomCollaborateur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrenomCollaborateur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelCollaborateurAfpa")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Uo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("UO")
                        .IsFixedLength(true);

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("UserID");

                    b.HasKey("MatriculeCollaborateurAfpa")
                        .HasName("PK_CollaborateurAfpa_1");

                    b.HasIndex("CodeTitreCivilite");

                    b.HasIndex("IdEtablissement");

                    b.HasIndex("Uo");

                    b.ToTable("CollaborateurAfpa");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Contrat", b =>
                {
                    b.Property<int>("IdContrat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodeAppellation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEntreeFonction")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateSortieFonction")
                        .HasColumnType("date");

                    b.Property<int>("DureeContratMois")
                        .HasColumnType("int");

                    b.Property<bool>("EnLienMetierFormation")
                        .HasColumnType("bit");

                    b.Property<int>("IdEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("LibelleFonction")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("MatriculeBeneficiaire")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<int>("TypeContrat")
                        .HasColumnType("int");

                    b.HasKey("IdContrat");

                    b.HasIndex("IdEntreprise");

                    b.HasIndex("MatriculeBeneficiaire");

                    b.HasIndex("TypeContrat");

                    b.ToTable("Contrat");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.DestinataireEnquete", b =>
                {
                    b.Property<Guid>("IdSoumissionnaire")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Agrege")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('0')");

                    b.Property<DateTime>("DateEcheanceEnquete")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateRealisationEnquete")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateRelance1")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateRelance2")
                        .HasColumnType("date");

                    b.Property<bool?>("EnEmploi")
                        .HasColumnType("bit");

                    b.Property<int?>("IdContrat")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanificationCampagneMail")
                        .HasColumnType("int");

                    b.Property<string>("MatriculeBeneficiaire")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<bool>("Repondu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdSoumissionnaire");

                    b.HasIndex("IdContrat");

                    b.HasIndex("IdPlanificationCampagneMail");

                    b.HasIndex("MatriculeBeneficiaire");

                    b.ToTable("DestinataireEnquete");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.DomaineMetierRome", b =>
                {
                    b.Property<string>("CodeDomaineRome")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("CodeFamilleRome")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("IntituleDomaineRome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("CodeDomaineRome");

                    b.HasIndex("CodeFamilleRome");

                    b.ToTable("DomaineMetierRome");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Entreprise", b =>
                {
                    b.Property<int>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Idpays2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("IDPays2")
                        .IsFixedLength(true);

                    b.Property<string>("Ligne1Adresse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne2Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne3Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MailEntreprise")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)");

                    b.Property<string>("NumeroSiret")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("NumeroSIRET");

                    b.Property<string>("RaisonSociale")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelEntreprise")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdEntreprise");

                    b.HasIndex("Idpays2");

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.EntrepriseProfessionnel", b =>
                {
                    b.Property<int>("IdEntreprise")
                        .HasColumnType("int");

                    b.Property<int>("IdProfessionnel")
                        .HasColumnType("int");

                    b.Property<bool?>("Actif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AdresseMailPro")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Fonction")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephonePro")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdEntreprise", "IdProfessionnel");

                    b.HasIndex("IdProfessionnel");

                    b.ToTable("Entreprise_Professionnel");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Etablissement", b =>
                {
                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("IdEtablissementRattachement")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Ligne1Adresse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne2Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ligne3Adresse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MailEtablissement")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)");

                    b.Property<string>("NomEtablissement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelEtablissement")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdEtablissement")
                        .HasName("PK_Etablissement_1");

                    b.HasIndex("IdEtablissementRattachement");

                    b.ToTable("Etablissement");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Evenement", b =>
                {
                    b.Property<decimal>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEvent")
                        .HasColumnType("datetime");

                    b.Property<string>("DétailsEvent")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCategorieEvent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("IdEtablissement")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<Guid?>("IdGroupe")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titre")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.HasKey("IdEvent");

                    b.HasIndex("IdCategorieEvent");

                    b.HasIndex("IdEtablissement");

                    b.ToTable("Evenement");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.EvenementDocument", b =>
                {
                    b.Property<decimal>("IdEvent")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("NumOrdre")
                        .HasColumnType("int");

                    b.Property<string>("PathDocument")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("IdEvent", "NumOrdre");

                    b.ToTable("Evenement_Document");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.FamilleMetierRome", b =>
                {
                    b.Property<string>("CodeFamilleMetierRome")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("IntituleFamilleMetierRome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CodeFamilleMetierRome");

                    b.ToTable("FamilleMetierRome");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsDouzeMois", b =>
                {
                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<bool>("EnLienAvecFormation")
                        .HasColumnType("bit");

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("Alternance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Autres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SansEmploie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalReponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("IdEtablissement", "IdOffreFormation", "EnLienAvecFormation", "Annee");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("InsertionsDouzeMois");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsSixMois", b =>
                {
                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<bool>("EnLienAvecFormation")
                        .HasColumnType("bit");

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("Alternance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Autres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SansEmploie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalReponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("IdEtablissement", "IdOffreFormation", "EnLienAvecFormation", "Annee");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("InsertionsSixMois");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsTroisMois", b =>
                {
                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<bool>("EnLienAvecFormation")
                        .HasColumnType("bit");

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("Alternance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Autres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Cdi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SansEmploie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalReponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("IdEtablissement", "IdOffreFormation", "EnLienAvecFormation", "Annee");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("InsertionsTroisMois");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.OffreFormation", b =>
                {
                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebutOffreFormation")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFinOffreFormation")
                        .HasColumnType("date");

                    b.Property<string>("LibelleOffreFormation")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LibelleReduitOffreFormation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MatriculeCollaborateurAfpa")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.HasKey("IdOffreFormation", "IdEtablissement");

                    b.HasIndex("CodeProduitFormation");

                    b.HasIndex("IdEtablissement");

                    b.HasIndex("MatriculeCollaborateurAfpa");

                    b.ToTable("OffreFormation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Pays", b =>
                {
                    b.Property<string>("Idpays2")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("IDPays2")
                        .IsFixedLength(true);

                    b.Property<string>("Idpays3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("IDPays3")
                        .IsFixedLength(true);

                    b.Property<int>("IdpaysNum")
                        .HasColumnType("int")
                        .HasColumnName("IDPaysNum");

                    b.Property<string>("LibellePays")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idpays2");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Pee", b =>
                {
                    b.Property<decimal>("IdPee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EtatPee")
                        .HasColumnType("int");

                    b.Property<int>("IdEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsableJuridique")
                        .HasColumnType("int");

                    b.Property<int>("IdTuteur")
                        .HasColumnType("int");

                    b.Property<string>("MatriculeBeneficiaire")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<string>("Remarque")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPee");

                    b.HasIndex("IdEntreprise");

                    b.HasIndex("IdResponsableJuridique");

                    b.HasIndex("IdTuteur");

                    b.HasIndex("MatriculeBeneficiaire");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("Pee");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PeeDocument", b =>
                {
                    b.Property<decimal>("IdPee")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("NumOrdre")
                        .HasColumnType("int");

                    b.Property<string>("PathDocument")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("IdPee", "NumOrdre");

                    b.ToTable("Pee_Document");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PeriodePee", b =>
                {
                    b.Property<decimal>("IdPee")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("NumOrdre")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebutPeriodePee")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFinPeriodePee")
                        .HasColumnType("date");

                    b.HasKey("IdPee", "NumOrdre")
                        .HasName("PK_Periode_Pee_1");

                    b.ToTable("Periode_Pee");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PeriodePeeEvenement", b =>
                {
                    b.Property<decimal>("IdPee")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("NumOrdre")
                        .HasColumnType("int");

                    b.Property<decimal>("IdEvent")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("IdPee", "NumOrdre", "IdEvent");

                    b.ToTable("Periode_Pee_Evenement");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PlanificationCampagneMail", b =>
                {
                    b.Property<int>("IdPlanificationCampagneMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRealisation")
                        .HasColumnType("date");

                    b.Property<DateTime>("Echeance")
                        .HasColumnType("date");

                    b.Property<int>("EtatTraitement")
                        .HasColumnType("int");

                    b.Property<int>("IdCampagneMail")
                        .HasColumnType("int");

                    b.Property<int>("NombreDestinataires")
                        .HasColumnType("int");

                    b.Property<int>("NombreEnvois")
                        .HasColumnType("int");

                    b.Property<int>("NombreReponses")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.HasKey("IdPlanificationCampagneMail")
                        .HasName("PK_PlanificationCampagne");

                    b.HasIndex("IdCampagneMail");

                    b.ToTable("PlanificationCampagneMail");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ProduitFormation", b =>
                {
                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<bool>("FormationContinue")
                        .HasColumnType("bit");

                    b.Property<bool>("FormationDiplomante")
                        .HasColumnType("bit");

                    b.Property<string>("LibelleCourtFormation")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LibelleProduitFormation")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NiveauFormation")
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true);

                    b.HasKey("CodeProduitFormation")
                        .HasName("PK_ProduitDeFormation");

                    b.ToTable("ProduitFormation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ProduitFormationAppellationRome", b =>
                {
                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<string>("CodeRome")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.HasKey("CodeProduitFormation", "CodeRome");

                    b.HasIndex("CodeRome");

                    b.ToTable("ProduitFormation_AppellationRome");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Professionnel", b =>
                {
                    b.Property<int>("IdProfessionnel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeTitreCiviliteProfessionnel")
                        .HasColumnType("int");

                    b.Property<string>("NomProfessionnel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrenomProfessionnel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdProfessionnel");

                    b.HasIndex("CodeTitreCiviliteProfessionnel");

                    b.ToTable("Professionnel");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Rome", b =>
                {
                    b.Property<string>("CodeRome")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("CodeDomaineRome")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("IntituleCodeRome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("CodeRome")
                        .HasName("PK_CodeRome");

                    b.HasIndex("CodeDomaineRome");

                    b.ToTable("Rome");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.TitreCivilite", b =>
                {
                    b.Property<int>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<string>("TitreCiviliteAbrege")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TitreCiviliteComplet")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("CodeTitreCivilite");

                    b.ToTable("TitreCivilite");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.TypeContrat", b =>
                {
                    b.Property<int>("IdTypeContrat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesignationTypeContrat")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("designationTypeContrat");

                    b.HasKey("IdTypeContrat");

                    b.ToTable("TypeContrat");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.UniteOrganisationnelle", b =>
                {
                    b.Property<string>("Uo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("UO")
                        .IsFixedLength(true);

                    b.Property<string>("LibelleUo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LibelleUO");

                    b.HasKey("Uo");

                    b.ToTable("UniteOrganisationnelle");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.UniteOrganisationnelleChampProfessionnel", b =>
                {
                    b.Property<string>("Uo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("UO")
                        .IsFixedLength(true);

                    b.Property<string>("IdChampProfessionnel")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.HasKey("Uo", "IdChampProfessionnel")
                        .HasName("PK_Uo_ChampProfessionnel");

                    b.HasIndex("IdChampProfessionnel");

                    b.ToTable("UniteOrganisationnelle_ChampProfessionnel");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.AppelationRome", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Rome", "CodeRomeNavigation")
                        .WithMany("AppelationRomes")
                        .HasForeignKey("CodeRome")
                        .HasConstraintName("FK_AppelationRome_CodeRome")
                        .IsRequired();

                    b.Navigation("CodeRomeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Beneficiaire", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.TitreCivilite", "CodeTitreCiviliteNavigation")
                        .WithMany("Beneficiaires")
                        .HasForeignKey("CodeTitreCivilite")
                        .HasConstraintName("FK_Beneficiaire_TitreCivilite");

                    b.HasOne("AppAfpaBrive.BOL.Pays", "PaysNavigation")
                        .WithMany("Beneficiaires")
                        .HasForeignKey("IdPays2")
                        .HasConstraintName("FK_Beneficiaire_Pays");

                    b.Navigation("CodeTitreCiviliteNavigation");

                    b.Navigation("PaysNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.BeneficiaireOffreFormation", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.CodeResultatCertification", "CertifieNavigation")
                        .WithMany("BeneficiaireOffreFormations")
                        .HasForeignKey("Certifie")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_ResultatCertification");

                    b.HasOne("AppAfpaBrive.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("BeneficiaireOffreFormations")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_Beneficiaire")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "Id")
                        .WithMany("BeneficiaireOffreFormations")
                        .HasForeignKey("IdOffreFormation", "Idetablissement")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_OffreFormation")
                        .IsRequired();

                    b.Navigation("CertifieNavigation");

                    b.Navigation("Id");

                    b.Navigation("MatriculeBeneficiaireNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CampagneMail", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "Id")
                        .WithMany("CampagneMails")
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .HasConstraintName("FK_CampagneMail_OffreFormation")
                        .IsRequired();

                    b.Navigation("Id");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CollaborateurAfpa", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.TitreCivilite", "CodeTitreCiviliteNavigation")
                        .WithMany("CollaborateurAfpas")
                        .HasForeignKey("CodeTitreCivilite")
                        .HasConstraintName("FK_CollaborateurAfpa_TitreCivilite")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany("CollaborateurAfpas")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_CollaborateurAfpa_Etablissement");

                    b.HasOne("AppAfpaBrive.BOL.UniteOrganisationnelle", "UoNavigation")
                        .WithMany("CollaborateurAfpas")
                        .HasForeignKey("Uo")
                        .HasConstraintName("FK_CollaborateurAfpa_UniteOrganisationnelle");

                    b.Navigation("CodeTitreCiviliteNavigation");

                    b.Navigation("IdEtablissementNavigation");

                    b.Navigation("UoNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Contrat", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Entreprise", "IdEntrepriseNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdEntreprise")
                        .HasConstraintName("FK_Contrat_Entreprise")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_Contrat_Beneficiaire")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.TypeContrat", "TypeContratNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("TypeContrat")
                        .HasConstraintName("FK_Contrat_TypeContrat")
                        .IsRequired();

                    b.Navigation("IdEntrepriseNavigation");

                    b.Navigation("MatriculeBeneficiaireNavigation");

                    b.Navigation("TypeContratNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.DestinataireEnquete", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Contrat", "IdContratNavigation")
                        .WithMany("DestinataireEnquetes")
                        .HasForeignKey("IdContrat")
                        .HasConstraintName("FK_DestinataireEnquete_Contrat");

                    b.HasOne("AppAfpaBrive.BOL.PlanificationCampagneMail", "IdPlanificationCampagneMailNavigation")
                        .WithMany("DestinataireEnquetes")
                        .HasForeignKey("IdPlanificationCampagneMail")
                        .HasConstraintName("FK_DestinataireEnquete_PlanificationCampagneMail")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("DestinataireEnquetes")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_DestinataireEnquete_Beneficiaire")
                        .IsRequired();

                    b.Navigation("IdContratNavigation");

                    b.Navigation("IdPlanificationCampagneMailNavigation");

                    b.Navigation("MatriculeBeneficiaireNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.DomaineMetierRome", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.FamilleMetierRome", "CodeFamilleRomeNavigation")
                        .WithMany("DomaineMetierRomes")
                        .HasForeignKey("CodeFamilleRome")
                        .HasConstraintName("FK_DomaineMetierRome_FamilleMetierRome")
                        .IsRequired();

                    b.Navigation("CodeFamilleRomeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Entreprise", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Pays", "Idpays2Navigation")
                        .WithMany("Entreprises")
                        .HasForeignKey("Idpays2")
                        .HasConstraintName("FK_Entreprise_Pays")
                        .IsRequired();

                    b.Navigation("Idpays2Navigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.EntrepriseProfessionnel", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Entreprise", "IdEntrepriseNavigation")
                        .WithMany("EntrepriseProfessionnels")
                        .HasForeignKey("IdEntreprise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Professionnel", "IdProfessionnelNavigation")
                        .WithMany("EntrepriseProfessionnels")
                        .HasForeignKey("IdProfessionnel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEntrepriseNavigation");

                    b.Navigation("IdProfessionnelNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Etablissement", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementRattachementNavigation")
                        .WithMany("InverseIdEtablissementRattachementNavigation")
                        .HasForeignKey("IdEtablissementRattachement")
                        .HasConstraintName("FK_Etablissement_Etablissement1");

                    b.Navigation("IdEtablissementRattachementNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Evenement", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.CategorieEvenement", "IdCategorieEventNavigation")
                        .WithMany("Evenements")
                        .HasForeignKey("IdCategorieEvent")
                        .HasConstraintName("FK_Evenement_CategorieEvenement")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany("Evenements")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_Evenement_Etablissement")
                        .IsRequired();

                    b.Navigation("IdCategorieEventNavigation");

                    b.Navigation("IdEtablissementNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.EvenementDocument", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Evenement", "IdEventNavigation")
                        .WithMany("EvenementDocuments")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("FK_Evenement_Document_Evenement")
                        .IsRequired();

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsDouzeMois", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany()
                        .HasForeignKey("IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "IdOffreFormationNavigation")
                        .WithMany()
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEtablissementNavigation");

                    b.Navigation("IdOffreFormationNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsSixMois", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany()
                        .HasForeignKey("IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "IdOffreFormationNavigation")
                        .WithMany()
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEtablissementNavigation");

                    b.Navigation("IdOffreFormationNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.InsertionsTroisMois", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany()
                        .HasForeignKey("IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "IdOffreFormationNavigation")
                        .WithMany()
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEtablissementNavigation");

                    b.Navigation("IdOffreFormationNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.OffreFormation", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.ProduitFormation", "CodeProduitFormationNavigation")
                        .WithMany("OffreFormations")
                        .HasForeignKey("CodeProduitFormation")
                        .HasConstraintName("FK_OffreFormation_ProduitDeFormation")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany("OffreFormations")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_OffreFormation_Etablissement")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.CollaborateurAfpa", "MatriculeCollaborateurAfpaNavigation")
                        .WithMany("OffreFormations")
                        .HasForeignKey("MatriculeCollaborateurAfpa")
                        .HasConstraintName("FK_OffreFormation_CollaborateurAfpa");

                    b.Navigation("CodeProduitFormationNavigation");

                    b.Navigation("IdEtablissementNavigation");

                    b.Navigation("MatriculeCollaborateurAfpaNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Pee", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Entreprise", "IdEntrepriseNavigation")
                        .WithMany("Pees")
                        .HasForeignKey("IdEntreprise")
                        .HasConstraintName("FK_Pee_Entreprise")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Professionnel", "IdResponsableJuridiqueNavigation")
                        .WithMany("PeeIdResponsableJuridiqueNavigations")
                        .HasForeignKey("IdResponsableJuridique")
                        .HasConstraintName("FK_Pee_ResponsableJuridique")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Professionnel", "IdTuteurNavigation")
                        .WithMany("PeeIdTuteurNavigations")
                        .HasForeignKey("IdTuteur")
                        .HasConstraintName("FK_Pee_Tuteur")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("Pees")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_Pee_Beneficiaire")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.OffreFormation", "Id")
                        .WithMany("Pees")
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .HasConstraintName("FK_Pee_OffreFormation")
                        .IsRequired();

                    b.Navigation("Id");

                    b.Navigation("IdEntrepriseNavigation");

                    b.Navigation("IdResponsableJuridiqueNavigation");

                    b.Navigation("IdTuteurNavigation");

                    b.Navigation("MatriculeBeneficiaireNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PeeDocument", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Pee", "idPeeNavigation")
                        .WithMany("PeeDocument")
                        .HasForeignKey("IdPee")
                        .HasConstraintName("FK_Pee_Document_Pee")
                        .IsRequired();

                    b.Navigation("idPeeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PeriodePee", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.Pee", "IdPeeNavigation")
                        .WithMany("PeriodePees")
                        .HasForeignKey("IdPee")
                        .HasConstraintName("FK_Periode_Pee_Pee")
                        .IsRequired();

                    b.Navigation("IdPeeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PlanificationCampagneMail", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.CampagneMail", "IdCampagneMailNavigation")
                        .WithMany("PlanificationCampagneMails")
                        .HasForeignKey("IdCampagneMail")
                        .HasConstraintName("FK_PlanificationCampagneMail_CampagneMail")
                        .IsRequired();

                    b.Navigation("IdCampagneMailNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ProduitFormationAppellationRome", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.ProduitFormation", "CodeProduitFormationNavigation")
                        .WithMany("ProduitFormationAppellationRomes")
                        .HasForeignKey("CodeProduitFormation")
                        .HasConstraintName("FK_ProduitFormation_AppellationRome_ProduitFormation")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.Rome", "CodeRomeNavigation")
                        .WithMany("ProduitFormationAppellationRomes")
                        .HasForeignKey("CodeRome")
                        .HasConstraintName("FK_ProduitFormation_AppellationRome_Rome")
                        .IsRequired();

                    b.Navigation("CodeProduitFormationNavigation");

                    b.Navigation("CodeRomeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Professionnel", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.TitreCivilite", "TitreCiviliteNavigation")
                        .WithMany("Professionnels")
                        .HasForeignKey("CodeTitreCiviliteProfessionnel")
                        .HasConstraintName("CodeTitreCiviliteProfessionnel")
                        .IsRequired();

                    b.Navigation("TitreCiviliteNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Rome", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.DomaineMetierRome", "CodeDomaineRomeNavigation")
                        .WithMany("Romes")
                        .HasForeignKey("CodeDomaineRome")
                        .HasConstraintName("FK_Rome_DomaineMetierRome");

                    b.Navigation("CodeDomaineRomeNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.UniteOrganisationnelleChampProfessionnel", b =>
                {
                    b.HasOne("AppAfpaBrive.BOL.ChampProfessionnnel", "IdChampProfessionnelNavigation")
                        .WithMany("UniteOrganisationnelleChampProfessionnels")
                        .HasForeignKey("IdChampProfessionnel")
                        .HasConstraintName("FK_Uo_ChampProfessionnel_ChampProfessionnnel")
                        .IsRequired();

                    b.HasOne("AppAfpaBrive.BOL.UniteOrganisationnelle", "UoNavigation")
                        .WithMany("UniteOrganisationnelleChampProfessionnels")
                        .HasForeignKey("Uo")
                        .HasConstraintName("FK_Uo_ChampProfessionnel_UniteOrganisationnelle")
                        .IsRequired();

                    b.Navigation("IdChampProfessionnelNavigation");

                    b.Navigation("UoNavigation");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Beneficiaire", b =>
                {
                    b.Navigation("BeneficiaireOffreFormations");

                    b.Navigation("Contrats");

                    b.Navigation("DestinataireEnquetes");

                    b.Navigation("Pees");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CampagneMail", b =>
                {
                    b.Navigation("PlanificationCampagneMails");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CategorieEvenement", b =>
                {
                    b.Navigation("Evenements");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ChampProfessionnnel", b =>
                {
                    b.Navigation("UniteOrganisationnelleChampProfessionnels");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CodeResultatCertification", b =>
                {
                    b.Navigation("BeneficiaireOffreFormations");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.CollaborateurAfpa", b =>
                {
                    b.Navigation("OffreFormations");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Contrat", b =>
                {
                    b.Navigation("DestinataireEnquetes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.DomaineMetierRome", b =>
                {
                    b.Navigation("Romes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Entreprise", b =>
                {
                    b.Navigation("Contrats");

                    b.Navigation("EntrepriseProfessionnels");

                    b.Navigation("Pees");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Etablissement", b =>
                {
                    b.Navigation("CollaborateurAfpas");

                    b.Navigation("Evenements");

                    b.Navigation("InverseIdEtablissementRattachementNavigation");

                    b.Navigation("OffreFormations");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Evenement", b =>
                {
                    b.Navigation("EvenementDocuments");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.FamilleMetierRome", b =>
                {
                    b.Navigation("DomaineMetierRomes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.OffreFormation", b =>
                {
                    b.Navigation("BeneficiaireOffreFormations");

                    b.Navigation("CampagneMails");

                    b.Navigation("Pees");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Pays", b =>
                {
                    b.Navigation("Beneficiaires");

                    b.Navigation("Entreprises");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Pee", b =>
                {
                    b.Navigation("PeeDocument");

                    b.Navigation("PeriodePees");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.PlanificationCampagneMail", b =>
                {
                    b.Navigation("DestinataireEnquetes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.ProduitFormation", b =>
                {
                    b.Navigation("OffreFormations");

                    b.Navigation("ProduitFormationAppellationRomes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Professionnel", b =>
                {
                    b.Navigation("EntrepriseProfessionnels");

                    b.Navigation("PeeIdResponsableJuridiqueNavigations");

                    b.Navigation("PeeIdTuteurNavigations");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.Rome", b =>
                {
                    b.Navigation("AppelationRomes");

                    b.Navigation("ProduitFormationAppellationRomes");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.TitreCivilite", b =>
                {
                    b.Navigation("Beneficiaires");

                    b.Navigation("CollaborateurAfpas");

                    b.Navigation("Professionnels");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.TypeContrat", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AppAfpaBrive.BOL.UniteOrganisationnelle", b =>
                {
                    b.Navigation("CollaborateurAfpas");

                    b.Navigation("UniteOrganisationnelleChampProfessionnels");
                });
#pragma warning restore 612, 618
        }
    }
}
